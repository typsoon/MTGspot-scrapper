/*
 * This file is generated by jOOQ.
 */
package org.example.mtgspotscrapper.model.databaseClasses.tables.records;


import org.example.mtgspotscrapper.model.databaseClasses.tables.Lists;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ListsRecord extends UpdatableRecordImpl<ListsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lists.list_id</code>.
     */
    public void setListId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lists.list_id</code>.
     */
    public Integer getListId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.lists.list_name</code>.
     */
    public void setListName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lists.list_name</code>.
     */
    public String getListName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.lists.logo_id</code>.
     */
    public void setLogoId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lists.logo_id</code>.
     */
    public Integer getLogoId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ListsRecord
     */
    public ListsRecord() {
        super(Lists.LISTS);
    }

    /**
     * Create a detached, initialised ListsRecord
     */
    public ListsRecord(Integer listId, String listName, Integer logoId) {
        super(Lists.LISTS);

        setListId(listId);
        setListName(listName);
        setLogoId(logoId);
        resetChangedOnNotNull();
    }
}
