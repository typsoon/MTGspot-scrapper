/*
 * This file is generated by jOOQ.
 */
package org.example.mtgspotscrapper.model.databaseClasses;


import org.example.mtgspotscrapper.model.databaseClasses.tables.Cards;
import org.example.mtgspotscrapper.model.databaseClasses.tables.Listcards;
import org.example.mtgspotscrapper.model.databaseClasses.tables.Lists;
import org.example.mtgspotscrapper.model.databaseClasses.tables.Listslogos;
import org.example.mtgspotscrapper.model.databaseClasses.tables.Localaddresses;
import org.example.mtgspotscrapper.model.databaseClasses.tables.records.CardsRecord;
import org.example.mtgspotscrapper.model.databaseClasses.tables.records.ListcardsRecord;
import org.example.mtgspotscrapper.model.databaseClasses.tables.records.ListsRecord;
import org.example.mtgspotscrapper.model.databaseClasses.tables.records.ListslogosRecord;
import org.example.mtgspotscrapper.model.databaseClasses.tables.records.LocaladdressesRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CardsRecord> CARDS_IMAGE_URL_KEY = Internal.createUniqueKey(Cards.CARDS, DSL.name("cards_image_url_key"), new TableField[] { Cards.CARDS.IMAGE_URL }, true);
    public static final UniqueKey<CardsRecord> CARDS_PKEY = Internal.createUniqueKey(Cards.CARDS, DSL.name("cards_pkey"), new TableField[] { Cards.CARDS.MULTIVERSE_ID }, true);
    public static final UniqueKey<ListcardsRecord> LISTCARDS_LIST_ID_MULTIVERSE_ID_KEY = Internal.createUniqueKey(Listcards.LISTCARDS, DSL.name("listcards_list_id_multiverse_id_key"), new TableField[] { Listcards.LISTCARDS.LIST_ID, Listcards.LISTCARDS.MULTIVERSE_ID }, true);
    public static final UniqueKey<ListsRecord> LISTS_LIST_NAME_KEY = Internal.createUniqueKey(Lists.LISTS, DSL.name("lists_list_name_key"), new TableField[] { Lists.LISTS.LIST_NAME }, true);
    public static final UniqueKey<ListsRecord> LISTS_PKEY = Internal.createUniqueKey(Lists.LISTS, DSL.name("lists_pkey"), new TableField[] { Lists.LISTS.LIST_ID }, true);
    public static final UniqueKey<ListslogosRecord> LISTSLOGOS_LOGO_PATH_KEY = Internal.createUniqueKey(Listslogos.LISTSLOGOS, DSL.name("listslogos_logo_path_key"), new TableField[] { Listslogos.LISTSLOGOS.LOGO_PATH }, true);
    public static final UniqueKey<ListslogosRecord> LISTSLOGOS_PKEY = Internal.createUniqueKey(Listslogos.LISTSLOGOS, DSL.name("listslogos_pkey"), new TableField[] { Listslogos.LISTSLOGOS.LOGO_ID }, true);
    public static final UniqueKey<LocaladdressesRecord> LOCALADDRESSES_LOCAL_ADDRESS_KEY = Internal.createUniqueKey(Localaddresses.LOCALADDRESSES, DSL.name("localaddresses_local_address_key"), new TableField[] { Localaddresses.LOCALADDRESSES.LOCAL_ADDRESS }, true);
    public static final UniqueKey<LocaladdressesRecord> LOCALADDRESSES_PKEY = Internal.createUniqueKey(Localaddresses.LOCALADDRESSES, DSL.name("localaddresses_pkey"), new TableField[] { Localaddresses.LOCALADDRESSES.MULTIVERSE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ListcardsRecord, ListsRecord> LISTCARDS__LISTCARDS_LIST_ID_FKEY = Internal.createForeignKey(Listcards.LISTCARDS, DSL.name("listcards_list_id_fkey"), new TableField[] { Listcards.LISTCARDS.LIST_ID }, Keys.LISTS_PKEY, new TableField[] { Lists.LISTS.LIST_ID }, true);
    public static final ForeignKey<ListcardsRecord, CardsRecord> LISTCARDS__LISTCARDS_MULTIVERSE_ID_FKEY = Internal.createForeignKey(Listcards.LISTCARDS, DSL.name("listcards_multiverse_id_fkey"), new TableField[] { Listcards.LISTCARDS.MULTIVERSE_ID }, Keys.CARDS_PKEY, new TableField[] { Cards.CARDS.MULTIVERSE_ID }, true);
    public static final ForeignKey<ListsRecord, ListslogosRecord> LISTS__LISTS_LOGO_ID_FKEY = Internal.createForeignKey(Lists.LISTS, DSL.name("lists_logo_id_fkey"), new TableField[] { Lists.LISTS.LOGO_ID }, Keys.LISTSLOGOS_PKEY, new TableField[] { Listslogos.LISTSLOGOS.LOGO_ID }, true);
    public static final ForeignKey<LocaladdressesRecord, CardsRecord> LOCALADDRESSES__LOCALADDRESSES_MULTIVERSE_ID_FKEY = Internal.createForeignKey(Localaddresses.LOCALADDRESSES, DSL.name("localaddresses_multiverse_id_fkey"), new TableField[] { Localaddresses.LOCALADDRESSES.MULTIVERSE_ID }, Keys.CARDS_PKEY, new TableField[] { Cards.CARDS.MULTIVERSE_ID }, true);
}
