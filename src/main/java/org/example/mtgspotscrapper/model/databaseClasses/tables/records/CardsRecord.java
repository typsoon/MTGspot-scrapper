/*
 * This file is generated by jOOQ.
 */
package org.example.mtgspotscrapper.model.databaseClasses.tables.records;


import java.math.BigDecimal;

import org.example.mtgspotscrapper.model.databaseClasses.tables.Cards;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cards.multiverse_id</code>.
     */
    public void setMultiverseId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cards.multiverse_id</code>.
     */
    public Integer getMultiverseId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.cards.card_name</code>.
     */
    public void setCardName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cards.card_name</code>.
     */
    public String getCardName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.cards.previous_price</code>.
     */
    public void setPreviousPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cards.previous_price</code>.
     */
    public BigDecimal getPreviousPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.cards.actual_price</code>.
     */
    public void setActualPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cards.actual_price</code>.
     */
    public BigDecimal getActualPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.cards.image_url</code>.
     */
    public void setImageUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.cards.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Integer multiverseId, String cardName, BigDecimal previousPrice, BigDecimal actualPrice, String imageUrl) {
        super(Cards.CARDS);

        setMultiverseId(multiverseId);
        setCardName(cardName);
        setPreviousPrice(previousPrice);
        setActualPrice(actualPrice);
        setImageUrl(imageUrl);
        resetChangedOnNotNull();
    }
}
